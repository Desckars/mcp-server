# ========================================\n# CONFIGURACIÓN MCP SERVER JAVA UNIVERSAL\n# ========================================\n\n# ========================================\n# APIs de LLMs (Large Language Models)\n# ========================================\n\n# OpenAI API\n# Obtener en: https://platform.openai.com/api-keys\nOPENAI_API_KEY=sk-your-openai-api-key-here\n\n# Google Gemini API\n# Obtener en: https://makersuite.google.com/app/apikey\nGEMINI_API_KEY=your-gemini-api-key-here\n\n# Hugging Face API\n# Obtener en: https://huggingface.co/settings/tokens\nHUGGINGFACE_API_KEY=hf_your-huggingface-token-here\n\n# ========================================\n# BASE DE DATOS\n# ========================================\n\n# MongoDB\n# Formato: mongodb://[username:password@]host[:port][/database]\nMONGODB_URI=mongodb://localhost:27017/mcp_server\n\n# MongoDB con autenticación\n# MONGODB_URI=mongodb://usuario:password@localhost:27017/mcp_server\n\n# MongoDB Cloud (Atlas)\n# MONGODB_URI=mongodb+srv://usuario:password@cluster.mongodb.net/mcp_server?retryWrites=true&w=majority\n\n# ========================================\n# CONFIGURACIÓN DEL SERVIDOR\n# ========================================\n\n# Perfil de Spring (development, production, test)\nSPRING_PROFILES_ACTIVE=development\n\n# Puerto para modo web (si se habilita)\n# SERVER_PORT=8080\n\n# Nivel de logging\n# LOGGING_LEVEL_COM_DESCKARS_MCPSERVER=DEBUG\n\n# ========================================\n# CONFIGURACIÓN DE HERRAMIENTAS\n# ========================================\n\n# Tamaño máximo de archivo en bytes (por defecto 5MB)\n# MCP_TOOLS_FILESYSTEM_MAX_FILE_SIZE=5242880\n\n# Directorio de workspace\n# MCP_TOOLS_FILESYSTEM_WORKSPACE_DIR=workspace\n\n# Tiempo máximo de ejecución en ms\n# MCP_SECURITY_MAX_EXECUTION_TIME=10000\n\n# ========================================\n# CONFIGURACIÓN DE DESARROLLO\n# ========================================\n\n# Habilitar actuator para monitoreo (solo desarrollo)\n# MANAGEMENT_ENDPOINTS_WEB_EXPOSURE_INCLUDE=health,info,metrics\n\n# Base URL para APIs (si se usa proxy)\n# HTTP_PROXY=http://proxy.company.com:8080\n# HTTPS_PROXY=https://proxy.company.com:8080\n\n# ========================================\n# VARIABLES OPCIONALES\n# ========================================\n\n# Timezone\n# TZ=America/Argentina/Buenos_Aires\n\n# Codificación por defecto\n# FILE_ENCODING=UTF-8\n\n# Configuración de memoria JVM (para producción)\n# JAVA_OPTS=\"-Xms512m -Xmx2g -XX:+UseG1GC\"\n\n# ========================================\n# NOTAS DE CONFIGURACIÓN\n# ========================================\n\n# 1. Copiar este archivo como .env en el directorio raíz\n# 2. Configurar las variables según tu entorno\n# 3. No subir el archivo .env al repositorio (está en .gitignore)\n# 4. Para producción, usar variables de entorno del sistema\n# 5. Las variables con # están comentadas (valores por defecto)\n\n# ========================================\n# CONFIGURACIÓN POR ENTORNO\n# ========================================\n\n# DESARROLLO LOCAL:\n# - Usar MongoDB local: mongodb://localhost:27017\n# - APIs de prueba con límites generosos\n# - Logging en DEBUG\n# - Actuator habilitado\n\n# PRODUCCIÓN:\n# - MongoDB en la nube (Atlas)\n# - APIs con keys de producción\n# - Logging en INFO/WARN\n# - Actuator restringido\n# - Configurar JAVA_OPTS para rendimiento\n\n# TESTING:\n# - MongoDB embebido (H2 o TestContainers)\n# - APIs mock o sandbox\n# - Logging en TRACE\n# - Profiles de test activos"